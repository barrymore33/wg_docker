---

  - hosts: all
    become: yes
    become_user: root
    vars:
        # INPUT - Пароль для сервера WireGuard
        PasswordServer: "{{ PasswordServer }}"
        #
        container_name: wg_easy
        container_image: ghcr.io/wg-easy/wg-easy
    tasks:
      - name: Проверка DNS
        command: host -t A google.com

      - name: Установка Docker
        import_tasks: ./script/docker_install.yml

      - name: Создание Docker контейнера
        block:
            # Источник: https://github.com/wg-easy/wg-easy/pkgs/container/wg-easy
            - name: Удаление прошлого Docker контейнера(если ошибка, то игнорируем)
              command: "docker rm -f {{ container_name }}"
              ignore_errors: yes
              
            - name: Создаем хеш пароль к Docker контейнеру
              command: |
                  docker run --rm \
                    {{ container_image }} \
                    wgpw {{ PasswordServer }}
              register: pass_hash

            - name: Запуск нового Docker контейнера
              command: |
                  docker run -d \
                    --name={{ container_name }} \
                    -e WG_HOST={{ ansible_host }} \
                    -e LANG=ru \
                    -e {{ pass_hash.stdout }} \
                    -v /home/.{{ container_name }}:/etc/wireguard \
                    -p 51820:51820/udp \
                    -p 51821:51821/tcp \
                    --cap-add=NET_ADMIN \
                    --cap-add=SYS_MODULE \
                    --sysctl="net.ipv4.conf.all.src_valid_mark=1" \
                    --sysctl="net.ipv4.ip_forward=1" \
                    --restart unless-stopped \
                    {{ container_image }}

      - name: Создание systemd-службы для авто запуска контейнера
        block:
            - name: Создание конфигурационного файла автозапуска Docker
              copy:
                  dest: "/etc/systemd/system/{{ container_name }}.service"
                  content: |
                      [Unit]
                      Description=Docker Container: {{ container_name }}
                      Requires=docker.service
                      After=docker.service

                      [Service]
                      Restart=always
                      ExecStartPre=/usr/bin/docker pull {{ container_image }}
                      ExecStart=/usr/bin/docker start -a {{ container_name }}
                      ExecStop=/usr/bin/docker stop -t 10 {{ container_name }}

                      [Install]
                      WantedBy=multi-user.target

            - name: Перезапуск systemd
              systemd:
                  name: "{{ container_name }}.service"
                  daemon_reload: yes
                  state: restarted

            - name: Включение службы в автозапуск
              systemd:
                  name: "{{ container_name }}.service"
                  enabled: yes

            - name: Запуск контейнера Docker
              command: "docker start {{ container_name }}"
